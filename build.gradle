plugins {
	id "org.springframework.boot" version "$orgSpringframeworkBoot"
	id "io.spring.dependency-management" version "$ioSpringDependencyManagement"
	id "java"
	id "org.openapi.generator" version "$orgOpenapiGenerator"
	id "application"
}

group = "com.javajo"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "11"
mainClassName = "javajo.ponsyukey.PonsyukeyApplication"

// DOMA関係
// テンポラリディレクトリのパスを定義する
ext.domaResourcesDir = "${buildDir}/tmp/doma-resources"
// domaが注釈処理で参照するリソースをテンポラリディレクトリに抽出
task extractDomaResources(type: Copy, dependsOn: processResources)  {
	from processResources.destinationDir
	include "doma.compile.config"
	include "META-INF/**/*.sql"
	include "META-INF/**/*.script"
	into domaResourcesDir
}

// テンポラリディレクトリ内のリソースをcompileJavaタスクの出力先ディレクトリにコピーする
task copyDomaResources(type: Copy, dependsOn: extractDomaResources)  {
	from domaResourcesDir
	into compileJava.destinationDirectory.getAsFile().orNull
}

bootJar {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

jar {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

compileJava {
	// 上述のタスクに依存させる
  dependsOn copyDomaResources
//	// テンポラリディレクトリをcompileJavaタスクの入力ディレクトリに設定する
//	inputs.dir domaResourcesDir
	options.encoding = "UTF-8"
}
compileTestJava {
	options.encoding = "UTF-8"
	// テストの実行時は注釈処理を無効にする
	options.compilerArgs = ["-proc:none"]
}

repositories {
	mavenCentral()
}

dependencies {
	// domaへの依存を示す
	implementation "org.seasar.doma:doma-core:$orgSeasarDoma"
	annotationProcessor "org.seasar.doma:doma-processor:$orgSeasarDoma"
	implementation "org.seasar.doma.boot:doma-spring-boot-starter:$orgSeasarDomaSpringBoot"

	// SQL ServerのJDBCドライバーを使えるようにする
	runtimeOnly "com.microsoft.sqlserver:mssql-jdbc:$comMicrosoftSqlserver"

	implementation "org.springframework.boot:spring-boot-starter:$orgSpringframeworkBoot"
	testImplementation("org.springframework.boot:spring-boot-starter-test:$orgSpringframeworkBoot") {
		exclude group: "org.junit.vintage", module: "junit-vintage-engine"
	}
	implementation "org.springframework.boot:spring-boot-starter-web:$orgSpringframeworkBoot"
	implementation "org.springframework.data:spring-data-commons:$orgSpringframeworkData"

	implementation "io.springfox:springfox-spring-web:$ioSpringfox"
	implementation "io.springfox:springfox-swagger2:$ioSpringfox"

	implementation "javax.validation:validation-api:$javaxValidation"
}

test {
	useJUnitPlatform()
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/docs/api/openapi.yaml".toString()
	outputDir = "$rootDir".toString()
	apiPackage = "javajo.ponsyukey.controller"
	invokerPackage = "javajo.ponsyukey.invoker"
	modelPackage = "javajo.ponsyukey.model"
	generateModelTests = true
	generateApiTests = true
	configOptions = [
			dateLibrary: "java11",
			openApiNullable: "false"
	]
}